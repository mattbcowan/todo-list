{"version":3,"sources":["components/Checkbox/styles.js","components/Checkbox/Checkbox.jsx","context/AppReducer.jsx","context/GlobalState.jsx","components/AddTodo/styles.js","components/AddTodo/AddTodo.jsx","components/TaskText/styles.js","components/TaskText/TaskText.jsx","components/Task/styles.js","components/Task/Task.jsx","components/Header/styles.js","components/Header/Header.jsx","components/Footer/styles.js","components/Footer/Footer.jsx","components/TextInput/styles.js","components/TextInput/TextInput.jsx","components/RemoveTodo/styles.js","components/RemoveTodo/RemoveTodo.jsx","components/ListFooter/styles.js","components/ListFooter/ListFooter.jsx","components/SortableArray/styles.js","components/SortableArray/SortableArray.jsx","components/TaskList/styles.js","components/TaskList/TaskList.jsx","context/theme-context.js","components/Filter/Filter.jsx","App.js","index.js"],"names":["StyledInput","styled","input","Checkbox","checked","onChange","type","name","AppReducer","state","action","tasks","payload","filter","item","isChecked","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","addTask","removeTask","updateTask","clearCompletedTasks","TaskContainer","form","props","backgroundColor","textColor","SubmitLabel","label","SubmitButton","generateId","Math","floor","random","AddTodo","useState","text","id","setValue","useContext","onSubmit","event","length","preventDefault","htmlFor","src","alt","target","placeholder","required","Text","span","TaskText","div","Task","newTaskList","map","handleChecked","StyledHeader","header","StyledH1","h1","Header","handleOnClick","darkmode","onClick","StyledFooter","footer","Footer","TaskInput","TextInput","RemoveButton","RemoveTodo","stopPropagation","ListItem","ClearButton","button","ListFooter","items","forEach","ListContainer","ul","li","SortableContainer","sortableContainer","SortableListItem","sortableElement","SortableArray","onSortEnd","oldIndex","newIndex","newArray","arrayMoveImmutable","index","Container","TaskList","themes","background","foreground","completedText","ThemeContext","AppContainer","HeaderImage","picture","StyledMain","main","App","theme","setTheme","media","srcSet","aria-hidden","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAEaA,EAAcC,IAAOC,MAAV,ovB,OCaTC,EAbE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC3B,OACE,gCACE,cAACL,EAAD,CACEM,KAAK,WACLC,KAAK,WACLH,QAASA,EACTC,SAAUA,O,eCcHG,EAvBI,SAACC,EAAOC,GACzB,OAAQA,EAAOJ,MACb,IAAK,WACH,MAAO,CACLK,MAAM,GAAD,mBAAMF,EAAME,OAAZ,CAAmBD,EAAOE,WAEnC,IAAK,cACH,MAAO,CACLD,MAAOF,EAAME,MAAME,QAAO,SAACC,GAAD,OAAUA,IAASJ,EAAOE,YAExD,IAAK,cACH,MAAO,CACLD,MAAOD,EAAOE,SAElB,IAAK,wBACH,MAAO,CACLD,MAAOF,EAAME,MAAME,QAAO,SAACC,GAAD,OAA6B,IAAnBA,EAAKC,cAE7C,QACE,OAAON,IChBPO,EAAe,CACnBL,MAAO,IAGIM,EAAgBC,wBAAcF,GAE9BG,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWb,EAAYQ,GADH,mBACvCP,EADuC,KAChCa,EADgC,KAiC9C,OACE,cAACL,EAAcM,SAAf,CACEC,MAAO,CACLb,MAAOF,EAAME,MACbc,QAhCN,SAAiBX,GACfQ,EAAS,CACPhB,KAAM,WACNM,QAASE,KA8BPY,WA1BN,SAAoBZ,GAClBQ,EAAS,CACPhB,KAAM,cACNM,QAASE,KAwBPa,WApBN,SAAoBb,GAClBQ,EAAS,CACPhB,KAAM,cACNM,QAASE,KAkBPc,oBAdN,SAA6Bd,GAC3BQ,EAAS,CACPhB,KAAM,wBACNM,QAASE,MAKX,SASGM,KClDMS,EAAgB5B,IAAO6B,KAAV,oJAGJ,SAACC,GAAD,OAAWA,EAAMC,iBAAmB,wBAC/C,SAACD,GAAD,OAAWA,EAAME,WAAa,aAK5BC,EAAcjC,IAAOkC,MAAV,2QAaXC,EAAenC,IAAOC,MAAV,iLCnBnBmC,EAAa,WACjB,OAAOC,KAAKC,MAAM,IAAuB,IAAhBD,KAAKE,WA+CjBC,EA5CC,SAAC,GAAoC,IAAlCT,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,UAAgB,EACxBS,mBAAS,CACjCC,KAAM,GACN5B,WAAW,EACX6B,GAAIP,MAJ4C,mBAC3Cb,EAD2C,KACpCqB,EADoC,KAM1CpB,EAAYqB,qBAAW7B,GAAvBQ,QAeR,OACE,eAACI,EAAD,CAAekB,SAdI,SAACC,GAChBxB,EAAMmB,KAAKM,SACbD,EAAME,iBACNzB,EAAQD,GACRqB,EAAS,CAAEF,KAAM,GAAI5B,WAAW,EAAO6B,GAAIP,QAUNL,gBAAiBA,EAAxD,UACE,cAACE,EAAD,CAAaiB,QAAQ,UAArB,SACE,qBAAKC,IAAI,wBAAwBC,IAAI,iBAEvC,cAACjB,EAAD,CACE9B,KAAK,SACLkB,MAAM,SACNoB,GAAG,UACHrC,KAAK,cAEP,cAAC,GAAD,CACEqC,GAAG,aACHpB,MAAOA,EAAMmB,KACbtC,SAnBe,SAAC2C,GACpBA,EAAME,iBACNL,EAAS,2BAAKrB,GAAN,IAAamB,KAAMK,EAAMM,OAAO9B,UAkBpCS,UAAWA,EACXsB,YAAY,uBACZC,UAAQ,QC7CHC,EAAOxD,IAAOyD,KAAV,qFACI,SAAC3B,GAAD,OAAYA,EAAMhB,UAAY,eAAiB,UACvD,SAACgB,GAAD,OAAYA,EAAMhB,UAAY,MAAQ,UACxC,SAACgB,GAAD,OAAWA,EAAME,WAAa,aCK1B0B,EARE,SAAC,GAAwC,IAAtCvC,EAAqC,EAArCA,SAAUL,EAA2B,EAA3BA,UAAWkB,EAAgB,EAAhBA,UACvC,OACE,cAACwB,EAAD,CAAM1C,UAAWA,EAAWkB,UAAWA,EAAvC,SACGb,KCHMS,EAAgB5B,IAAO2D,IAAV,sEC6BXC,EAzBF,SAAC,GAAyB,IAAvB/C,EAAsB,EAAtBA,KAAMmB,EAAgB,EAAhBA,UAAgB,EACNa,qBAAW7B,GAAjCN,EAD4B,EAC5BA,MAAOgB,EADqB,EACrBA,WAWf,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEtB,SAAU,kBAbM,SAACuC,GACrB,IAAMkB,EAAcnD,EAAMoD,KAAI,SAACjD,GAC7B,OAAIA,EAAK8B,KAAOA,EACP,2BAAK9B,GAAZ,IAAkBC,WAAYD,EAAKC,YAE5BD,KAGXa,EAAWmC,GAKSE,CAAclD,EAAK8B,KACnCxC,QAASU,EAAKC,YAEhB,cAAC,EAAD,CAAUA,UAAWD,EAAKC,UAAWkB,UAAWA,EAAhD,SACGnB,EAAK6B,WCvBDsB,EAAehE,IAAOiE,OAAV,iJAQZC,EAAWlE,IAAOmE,GAAV,2ECWNC,EAnBA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAC/B,OACE,eAACN,EAAD,WACE,cAACE,EAAD,mBACA,+BACGI,EACC,qBAAKnB,IAAI,wBAAwBC,IAAI,MAAMmB,QAASF,IAEpD,qBACElB,IAAI,yBACJC,IAAI,OACJmB,QAASF,UCXRG,EAAexE,IAAOyE,OAAV,qGCIVC,EAJA,WACb,OAAO,cAACF,EAAD,6CCDIG,GAAY3E,IAAOC,MAAV,+LACX,SAAC6B,GAAD,OAAWA,EAAME,WAAa,aCY1B4C,GAbG,SAAC,GAA2D,IAAzDrD,EAAwD,EAAxDA,MAAOnB,EAAiD,EAAjDA,SAAUkD,EAAuC,EAAvCA,YAAatB,EAA0B,EAA1BA,UAAWuB,EAAe,EAAfA,SAC5D,OACE,cAACoB,GAAD,CACEtE,KAAK,OACLiD,YAAaA,EACb/B,MAAOA,EACPnB,SAAUA,EACV4B,UAAWA,EACXuB,SAAUA,KCRHsB,GAAe7E,IAAOC,MAAV,yKCuBV6E,GArBI,SAAChD,GAAW,IACrBjB,EAASiB,EAATjB,KAEAY,EAAeoB,qBAAW7B,GAA1BS,WAOR,OACE,cAACoD,GAAD,CACExE,KAAK,QACLC,KAAK,gBACLiE,QATgB,SAACxB,GACnBA,EAAMgC,kBACNtD,EAAWZ,IAQTsC,IAAI,0BACJC,IAAI,WClBG4B,GAAWhF,IAAO2D,IAAV,oLASRsB,GAAcjF,IAAOkF,OAAV,2HCoBTC,GA3BI,WAAO,IAGLC,EAHI,EACgBvC,qBAAW7B,GAA1CN,EADe,EACfA,MAAOiB,EADQ,EACRA,oBAgBf,OACE,eAACqD,GAAD,WACE,gCAhBeI,EAgBE1E,EAAME,QAAO,SAACC,GAAD,OAA6B,IAAnBA,EAAKC,aAf3CsE,EAAMpC,OAAS,EACX,GAAN,OAAUoC,EAAMpC,OAAhB,eAC0B,IAAjBoC,EAAMpC,OACR,cAEA,sBAWP,cAACiC,GAAD,CAAaV,QAAS,WAA0B7D,EAN7C2E,SAAQ,SAACxE,GAAD,OAAUc,EAAoBd,OAMzC,iC,kBCtBOyE,GAAgBtF,IAAOuF,GAAV,6MAYbP,GAAWhF,IAAOwF,GAAV,qNCNRC,GAAoBC,cAAkB,YAAmB,IAAhBvE,EAAe,EAAfA,SACpD,OAAO,cAACmE,GAAD,UAAgBnE,OAGnBwE,GAAmBC,cAAgB,gBAAGzE,EAAH,EAAGA,SAAH,OACvC,cAAC,GAAD,UAAWA,OAuBE0E,GApBO,SAAC,GAAmB,IAAjB7D,EAAgB,EAAhBA,UAAgB,EACTa,qBAAW7B,GAAjCN,EAD+B,EAC/BA,MAAOgB,EADwB,EACxBA,WAOf,OACE,cAAC+D,GAAD,CAAmBK,UANH,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACzBC,EAAWC,aAAmBxF,EAAOqF,EAAUC,GACnDtE,EAAWuE,IAIX,SACGvF,EAAMoD,KAAI,SAACjD,EAAMsF,GAAP,OACT,eAACR,GAAD,CAAgCQ,MAAOA,EAAvC,UACE,cAAC,EAAD,CAAMtF,KAAMA,EAAMmB,UAAWA,IAC7B,cAAC,GAAD,CAAYnB,KAAMA,MAFGA,EAAK8B,UCzBvByD,GAAYpG,IAAO2D,IAAV,+EACA,SAAC7B,GAAD,OAAWA,EAAMC,iBAAmB,wBCS3CsE,GATE,SAAC,GAAoC,IAAlCtE,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,UACnC,OACE,eAACoE,GAAD,CAAWrE,gBAAiBA,EAA5B,UACE,cAAC,GAAD,CAAeC,UAAWA,IAC1B,cAAC,GAAD,QCLOsE,ICCKtG,IAAO2D,IAAV,gVDAN,CACL4C,WAAY,UACZC,WAAY,UACZ9D,KAAM,UACN+D,cAAe,YALNH,GAOL,CACJC,WAAY,UACZC,WAAY,UACZ9D,KAAM,UACN+D,cAAe,WAINC,GAAezF,wBAAcqF,IEVpCK,GAAe3G,IAAO2D,IAAV,uJAGI,SAAC7B,GAAD,OAAWA,EAAMC,iBAAmB,wBAKpDqE,GAAYpG,IAAO2D,IAAV,mDAITiD,GAAc5G,IAAO6G,QAAV,iKAaXC,GAAa9G,IAAO+G,KAAV,kEA4EDC,OAvCf,WAAgB,IAhCM1C,EAgCP,EACa7B,mBAAS6D,IADtB,mBACNW,EADM,KACCC,EADD,KAWb,OACE,cAACP,GAAD,CAAc3E,UAAWiF,EAAMvE,KAAMX,gBAAiBkF,EAAMV,WAA5D,SACE,cAAC,EAAD,UACE,eAACG,GAAapF,SAAd,CAAuBC,MAAO0F,EAA9B,WA9Cc3C,EA+CEgC,KAAgBW,EA9ClC3C,EAEA,eAACsC,GAAD,WACE,wBACEO,MAAM,qBACNC,OAAO,gCAET,qBACEjE,IAAI,6BACJC,IAAI,yBACJiE,cAAY,YAMhB,eAACT,GAAD,WACE,wBACEO,MAAM,qBACNC,OAAO,iCAET,qBACEjE,IAAI,8BACJC,IAAI,0BACJiE,cAAY,aAuBZ,eAAC,GAAD,WACE,cAAC,EAAD,CACEhD,cAfU,WAElB6C,EADED,IAAUX,GACHA,GAEAA,KAYDhC,SAAUgC,KAAgBW,IAE5B,eAACH,GAAD,WACE,cAAC,EAAD,CACE/E,gBAAiBkF,EAAMT,WACvBxE,UAAWiF,EAAMvE,OAEnB,cAAC,GAAD,CACEX,gBAAiBkF,EAAMT,WACvBxE,UAAWiF,EAAMvE,aAIvB,cAAC,EAAD,Y,MChGV4E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e602cea1.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledInput = styled.input`\n  appearance: none;\n  font-size: 1.5rem;\n  width: 0.9em;\n  height: 0.9em;\n  margin: 0;\n  margin-right: 0.5em;\n  line-height: 0.6;\n  background-color: transparent;\n  border: 1px solid hsl(234, 11%, 52%);\n  border-radius: 1em;\n  transform: translateY(-0.075em);\n  overflow: hidden;\n  display: grid;\n  place-content: center;\n\n  &::before {\n    content: \"\";\n    text-align: center;\n    width: 0.9em;\n    height: 0.9em;\n    border-radius: 1em;\n    transition: 150ms transform ease-in-out;\n    transform: scale(0);\n    background: linear-gradient(hsl(192, 100%, 67%), hsl(280, 87%, 65%));\n    );\n  }\n\n  &:checked::before {\n      content: url('./images/icon-check.svg');\n      transform: scale(1);\n  }\n`;\n","import { StyledInput } from \"./styles\";\n\nconst Checkbox = ({ checked, onChange }) => {\n  return (\n    <label>\n      <StyledInput\n        type=\"checkbox\"\n        name=\"checkbox\"\n        checked={checked}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nexport default Checkbox;\n","const AppReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      return {\n        tasks: [...state.tasks, action.payload],\n      };\n    case \"REMOVE_TASK\":\n      return {\n        tasks: state.tasks.filter((item) => item !== action.payload),\n      };\n    case \"UPDATE_TASK\":\n      return {\n        tasks: action.payload,\n      };\n    case \"CLEAR_COMPLETED_TASKS\":\n      return {\n        tasks: state.tasks.filter((item) => item.isChecked === false),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default AppReducer;\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\nconst initialState = {\n  tasks: [],\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions for changing state\n\n  function addTask(item) {\n    dispatch({\n      type: \"ADD_TASK\",\n      payload: item,\n    });\n  }\n\n  function removeTask(item) {\n    dispatch({\n      type: \"REMOVE_TASK\",\n      payload: item,\n    });\n  }\n\n  function updateTask(item) {\n    dispatch({\n      type: \"UPDATE_TASK\",\n      payload: item,\n    });\n  }\n\n  function clearCompletedTasks(item) {\n    dispatch({\n      type: \"CLEAR_COMPLETED_TASKS\",\n      payload: item,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        tasks: state.tasks,\n        addTask,\n        removeTask,\n        updateTask,\n        clearCompletedTasks,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const TaskContainer = styled.form`\n  display: flex;\n  padding: 1rem;\n  background-color: ${(props) => props.backgroundColor || \"hsl(235, 24%, 19%)\"};\n  color: ${(props) => props.textColor || \"#ffffff\"};\n  border: none;\n  border-radius: 0.5rem;\n`;\n\nexport const SubmitLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 0.75rem;\n  height: 0.75rem;\n  background-color: hsl(234, 11%, 52%);\n  border-radius: 2rem;\n  padding: 0.5rem;\n  margin-right: 0.5rem;\n  cursor: pointer;\n`;\n\nexport const SubmitButton = styled.input`\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { TextInput } from \"../\";\nimport { TaskContainer, SubmitLabel, SubmitButton } from \"./styles\";\n\nconst generateId = () => {\n  return Math.floor(1000 + Math.random() * 9000);\n};\n\nconst AddTodo = ({ backgroundColor, textColor }) => {\n  const [value, setValue] = useState({\n    text: \"\",\n    isChecked: false,\n    id: generateId(),\n  });\n  const { addTask } = useContext(GlobalContext);\n\n  const handleSubmit = (event) => {\n    if (value.text.length) {\n      event.preventDefault();\n      addTask(value);\n      setValue({ text: \"\", isChecked: false, id: generateId() });\n    }\n  };\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    setValue({ ...value, text: event.target.value });\n  };\n\n  return (\n    <TaskContainer onSubmit={handleSubmit} backgroundColor={backgroundColor}>\n      <SubmitLabel htmlFor=\"addTodo\">\n        <img src=\"./images/icon-add.svg\" alt=\"add symbol\" />\n      </SubmitLabel>\n      <SubmitButton\n        type=\"submit\"\n        value=\"submit\"\n        id=\"addTodo\"\n        name=\"add-to-do\"\n      />\n      <TextInput\n        id=\"createTodo\"\n        value={value.text}\n        onChange={handleChange}\n        textColor={textColor}\n        placeholder=\"Create a new todo...\"\n        required\n      />\n    </TaskContainer>\n  );\n};\n\nexport default AddTodo;\n","import styled from \"styled-components\";\n\nexport const Text = styled.span`\n  text-decoration: ${(props) => (props.isChecked ? \"line-through\" : \"none\")};\n  opacity: ${(props) => (props.isChecked ? \"30%\" : \"100%\")};\n  color: ${(props) => props.textColor || \"#ffffff\"};\n`;\n","import { Text } from \"./styles\";\n\nconst TaskText = ({ children, isChecked, textColor }) => {\n  return (\n    <Text isChecked={isChecked} textColor={textColor}>\n      {children}\n    </Text>\n  );\n};\n\nexport default TaskText;\n","import styled from \"styled-components\";\n\nexport const TaskContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import { useContext } from \"react\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport TaskText from \"../TaskText/TaskText\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { TaskContainer } from \"./styles\";\n\nconst Task = ({ item, textColor }) => {\n  const { tasks, updateTask } = useContext(GlobalContext);\n  const handleChecked = (id) => {\n    const newTaskList = tasks.map((item) => {\n      if (item.id === id) {\n        return { ...item, isChecked: !item.isChecked };\n      } else {\n        return item;\n      }\n    });\n    updateTask(newTaskList);\n  };\n  return (\n    <TaskContainer>\n      <Checkbox\n        onChange={() => handleChecked(item.id)}\n        checked={item.isChecked}\n      />\n      <TaskText isChecked={item.isChecked} textColor={textColor}>\n        {item.text}\n      </TaskText>\n    </TaskContainer>\n  );\n};\n\nexport default Task;\n","import styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n  position: relative;\n  z-index: 2;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`;\n\nexport const StyledH1 = styled.h1`\n  letter-spacing: 1rem;\n  padding-top: 1rem;\n`;\n","import { StyledHeader, StyledH1 } from \"./styles\";\n\nconst Header = ({ handleOnClick, darkmode }) => {\n  return (\n    <StyledHeader>\n      <StyledH1>TODO</StyledH1>\n      <span>\n        {darkmode ? (\n          <img src=\"./images/icon-sun.svg\" alt=\"sun\" onClick={handleOnClick} />\n        ) : (\n          <img\n            src=\"./images/icon-moon.svg\"\n            alt=\"moon\"\n            onClick={handleOnClick}\n          />\n        )}\n      </span>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const StyledFooter = styled.footer`\n  color: hsl(234, 11%, 52%);\n  text-align: center;\n  margin-top: 1em;\n`;\n","import { StyledFooter } from \"./styles\";\n\nconst Footer = () => {\n  return <StyledFooter>Drag and drop to reorder list</StyledFooter>;\n};\n\nexport default Footer;\n","import styled from \"styled-components\";\n\nexport const TaskInput = styled.input`\n  color: ${(props) => props.textColor || \"#ffffff\"};\n  border: none;\n  background-color: transparent;\n\n  ::placeholder {\n    color: hsl(234, 11%, 52%);\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n","import { TaskInput } from \"./styles\";\n\nconst TextInput = ({ value, onChange, placeholder, textColor, required }) => {\n  return (\n    <TaskInput\n      type=\"text\"\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      textColor={textColor}\n      required={required}\n    />\n  );\n};\n\nexport default TextInput;\n","import styled from \"styled-components\";\n\nexport const RemoveButton = styled.input`\n  background-color: transparent;\n  border: none;\n  color: hsl(234, 11%, 52%);\n  margin-left: 0.5rem;\n  z-index: 10;\n  cursor: pointer;\n`;\n","import { useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { RemoveButton } from \"./styles\";\n\nconst RemoveTodo = (props) => {\n  const { item } = props;\n\n  const { removeTask } = useContext(GlobalContext);\n\n  const handleClick = (event) => {\n    event.stopPropagation();\n    removeTask(item);\n  };\n\n  return (\n    <RemoveButton\n      type=\"image\"\n      name=\"remove button\"\n      onClick={handleClick}\n      src=\"./images/icon-cross.svg\"\n      alt=\"close\"\n    />\n  );\n};\n\nexport default RemoveTodo;\n","import styled from \"styled-components\";\n\nexport const ListItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 0.9rem;\n  padding: 1.5em 1em;\n  color: hsl(234, 11%, 52%);\n`;\n\nexport const ClearButton = styled.button`\n  background: transparent;\n  border: none;\n  color: hsl(234, 11%, 52%);\n  cursor: pointer;\n`;\n","import { useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { ListItem, ClearButton } from \"./styles\";\n\nconst ListFooter = () => {\n  const { tasks, clearCompletedTasks } = useContext(GlobalContext);\n\n  const ItemsLeft = (items) => {\n    if (items.length > 1) {\n      return `${items.length} Items Left`;\n    } else if (items.length === 1) {\n      return \"1 Item Left\";\n    } else {\n      return \"You're all done!\";\n    }\n  };\n\n  const handleClearComplete = (list) => {\n    list.forEach((item) => clearCompletedTasks(item));\n  };\n\n  return (\n    <ListItem>\n      <span>{ItemsLeft(tasks.filter((item) => item.isChecked === false))}</span>\n      <ClearButton onClick={() => handleClearComplete(tasks)}>\n        Clear Completed\n      </ClearButton>\n    </ListItem>\n  );\n};\n\nexport default ListFooter;\n","import styled from \"styled-components\";\n\nexport const ListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  margin: 0;\n  color: #ffffff;\n  border: none;\n  border-radius: 0.5rem;\n  list-style: none;\n  margin-top: 1em;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 0.9rem;\n  padding: 1.5em 1em;\n  border-bottom: 1px solid hsl(234, 11%, 52%);\n  z-index: 2;\n`;\n","import { sortableContainer, sortableElement } from \"react-sortable-hoc\";\nimport { arrayMoveImmutable } from \"array-move\";\nimport Task from \"../Task/Task\";\nimport { RemoveTodo } from \"..\";\nimport { ListContainer, ListItem } from \"./styles\";\nimport { useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nexport const SortableContainer = sortableContainer(({ children }) => {\n  return <ListContainer>{children}</ListContainer>;\n});\n\nconst SortableListItem = sortableElement(({ children }) => (\n  <ListItem>{children}</ListItem>\n));\n\nconst SortableArray = ({ textColor }) => {\n  const { tasks, updateTask } = useContext(GlobalContext);\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    let newArray = arrayMoveImmutable(tasks, oldIndex, newIndex);\n    updateTask(newArray);\n  };\n\n  return (\n    <SortableContainer onSortEnd={onSortEnd}>\n      {tasks.map((item, index) => (\n        <SortableListItem key={item.id} index={index}>\n          <Task item={item} textColor={textColor} />\n          <RemoveTodo item={item} />\n        </SortableListItem>\n      ))}\n    </SortableContainer>\n  );\n};\n\nexport default SortableArray;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-color: ${(props) => props.backgroundColor || \"hsl(235, 24%, 19%)\"};\n  border-radius: 0.5em;\n`;\n","import { ListFooter, SortableArray } from \"../\";\nimport { Container } from \"./styles\";\n\nconst TaskList = ({ backgroundColor, textColor }) => {\n  return (\n    <Container backgroundColor={backgroundColor}>\n      <SortableArray textColor={textColor} />\n      <ListFooter />\n    </Container>\n  );\n};\n\nexport default TaskList;\n","import { createContext } from \"react\";\n\nexport const themes = {\n  light: {\n    background: \"#E4E5F1\",\n    foreground: \"#FAFAFA\",\n    text: \"#484B6A\",\n    completedText: \"#D2D3DB\",\n  },\n  dark: {\n    background: \"#161722\",\n    foreground: \"#25273C\",\n    text: \"#E4E5F1\",\n    completedText: \"#777A92\",\n  },\n};\n\nexport const ThemeContext = createContext(themes.dark);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  background-color: #25273c;\n  padding: 0.25em;\n  margin-top: 1rem;\n  border-radius: 0.5em;\n\n  ul {\n    display: flex;\n    justify-content: space-evenly;\n    list-style: none;\n\n    li {\n      color: #60617d;\n    }\n\n    li#active {\n      color: hsl(220, 98%, 61%);\n    }\n  }\n`;\n\nconst Filter = () => {\n  return (\n    <Container>\n      <ul>\n        <li id=\"active\">All</li>\n        <li>Active</li>\n        <li>Completed</li>\n      </ul>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Header, Footer, TaskList, Filter } from \"./components/\";\nimport AddTodo from \"./components/AddTodo/AddTodo\";\nimport { ThemeContext, themes } from \"./context/theme-context\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nconst AppContainer = styled.div`\n  font-family: \"Josefin Sans\", sans-serif;\n  color: #ffffff;\n  background-color: ${(props) => props.backgroundColor || \"hsl(235, 21%, 11%)\"};\n  height: 100vh;\n  width: 100%;\n`;\n\nconst Container = styled.div`\n  padding: 1rem 2rem;\n`;\n\nconst HeaderImage = styled.picture`\n  object-fit: cover;\n  width: 100%;\n  z-index: 1;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  img {\n    width: 100%;\n  }\n`;\n\nconst StyledMain = styled.main`\n  position: relative;\n  z-index: 2;\n`;\n\nfunction HeaderPhotos(darkmode) {\n  if (darkmode) {\n    return (\n      <HeaderImage>\n        <source\n          media=\"(min-width: 800px)\"\n          srcSet=\"/images/bg-desktop-dark.jpg\"\n        />\n        <img\n          src=\"/images/bg-mobile-dark.jpg\"\n          alt=\"mobile dark background\"\n          aria-hidden=\"true\"\n        />\n      </HeaderImage>\n    );\n  } else {\n    return (\n      <HeaderImage>\n        <source\n          media=\"(min-width: 800px)\"\n          srcSet=\"/images/bg-desktop-light.jpg\"\n        />\n        <img\n          src=\"/images/bg-mobile-light.jpg\"\n          alt=\"mobile light background\"\n          aria-hidden=\"true\"\n        />\n      </HeaderImage>\n    );\n  }\n}\n\nfunction App() {\n  const [theme, setTheme] = useState(themes.dark);\n\n  const handleOnClick = () => {\n    if (theme === themes.dark) {\n      setTheme(themes.light);\n    } else {\n      setTheme(themes.dark);\n    }\n  };\n\n  return (\n    <AppContainer textColor={theme.text} backgroundColor={theme.background}>\n      <GlobalProvider>\n        <ThemeContext.Provider value={theme}>\n          {HeaderPhotos(themes.dark === theme)}\n          <Container>\n            <Header\n              handleOnClick={handleOnClick}\n              darkmode={themes.dark === theme}\n            />\n            <StyledMain>\n              <AddTodo\n                backgroundColor={theme.foreground}\n                textColor={theme.text}\n              />\n              <TaskList\n                backgroundColor={theme.foreground}\n                textColor={theme.text}\n              />\n            </StyledMain>\n          </Container>\n          <Footer />\n        </ThemeContext.Provider>\n      </GlobalProvider>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}